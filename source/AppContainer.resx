<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMIOAADCDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPbDpAz6x6cR+senEfrHpxH4xqYPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4nASDeRxEhHkcRIR5HESEeJwEg0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+MWmg/rHp+/6x6fm+sen5/nGp930wqMgAAAAAAAA
        AAAAAAAAAAAAAAAAAADicBKa5HES7uRxEubkcRLp43ESzttsEQ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD3xaVj+sen//rHp//6x6f/+sen//fE
        pU0AAAAAAAAAAAAAAAAAAAAAAAAAAOJwEn7kcRL/5HES/+RxEv/kcRL/4G8SMwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPXDpDH6x6f9+sen//rH
        p//6x6f/98WlgAAAAAAAAAAAAAAAAAAAAAAAAAAA4W8SSORxEv/kcRL/5HES/+RxEv/hbxJhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8sGiD/nG
        p+T6x6f/+sen//rHp//5xqa0AAAAAAAAAAAAAAAAAAAAAAAAAADfbhEe43ES8uRxEv/kcRL/5HES/+Jw
        EpYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+camu/rHp//6x6f/+sen//nGpt7svJ4LAAAAAAAAAAAAAAAAAAAAANFnEATjcRLS5HES/+Rx
        Ev/kcRL/43ASxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD4xqaK+sen//rHp//6x6f/+cen+vXDpCoAAAAAAAAAAAAAAAAAAAAAAAAAAOJw
        EqTkcRL/5HES/+RxEv/jcRLq3G0RFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPfKrE36yKn/+smp//rJqf/6yKn/98mrVAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4G0AaONwDf/jcAz/43AM/+NwDP/daQA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA7opKLfWOTGn1i0Vi9Z1qgPi3kP34t5H/+LeR//i3kv/2rIKx9Yk/X/WO
        TGX1jkxl9Y5MZfaQTmDvhT+Q6Xst/+p7Lf/qey3/6Xss/+2CO6D2kE5f9Y5MZfWOTGX1jkxl9Y5MafCL
        SkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuikp29Y5M//WOTP/1jkv/9YxH//WMR//1jEf/9YxH//WN
        Sv/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1j03/9Y9N//WPTf/1j03/9Y5M//WOTP/1jkz/9Y5M//WO
        TP/1jkz/8ItKsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO6KSnL1jkz/9Y5M//WOTP/1jkz/9Y5M//WO
        TP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WO
        TP/1jkz/9Y5M//WOTP/wi0qsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7opKcvWOTP/1jkz/9Y5M//WO
        TP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WO
        TP/1jkz/9Y5M//WOTP/1jkz/9Y5M//CLSqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuikp09I5M//WO
        TP/1jkz/9Y5M//WOTP/1jk3/9Y5M//WOTf/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WO
        Tf/1jkz/9Y5N//WOTP/1jkz/9Y5M//WOTP/1jkz/74tKsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOiH
        SCHtikpO7opKS+6KS0juhkNn8II2+vGCNv/xgjb/8YI2/+6DOqzti0xE7opKS+6KSkvuikpL7otLRu6F
        QHfwgjb/8YI2//GCNv/xgjb/7oM8lO2LTETtikpM7YpKTO6KSk7ph0gyAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANNQAAbufCjf73wo/+98KP/vfCj/7XsnswAAAAAAAAAAAAAAAAAA
        AAAAAAAA5nMQGO58KPHvfCj/73wo/+98KP/teyeRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO58KrHvfSr/730q/+99Kv/ufSrk53kpDwAA
        AAAAAAAAAAAAAAAAAACwXB4C7nwqze99Kv/vfSr/730q/+58KsoAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7Xwqee99Kv/vfSr/730q/+99
        Kv7reyk1AAAAAAAAAAAAAAAAAAAAAAAAAADtfCqa730q/+99Kv/vfSr/7n0q8Ol6KRsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADqeB857nwo/+98
        KP/vfCj/73wo/+t5JGQAAAAAAAAAAAAAAAAAAAAAAAAAAOt5I1jvfCj/73wo/+98KP/ufCj/6nggQQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuikpC9Y5MmvWOTJT1jkyU9Y5Mk/SM
        Sp7yh0D58oc///KHP//yhj//8olDy/WPTYf1jkyL9Y5Mi/WOTIv1jk2I9ItIpPKHP//yhz//8oc///KG
        P//zikW89Y9Nj/WOTJX1jkya8ItKZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO6KSnb1jkz/9Y5M//WO
        TP/1jkz/9Y5M//WPTf/1j03/9Y9N//WPTf/1jk3/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y9N//WP
        Tf/1j03/9Y9N//WOTP/1jkz/9Y5M//WOTP/wi0qzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7opKcvWO
        TP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WO
        TP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//CLSqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADuikpy9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WOTP/1jkz/9Y5M//WO
        TP/1jkz/9Y5M//WOTP/1jUv/9Y1L//WNS//1jUv/9Y5M//WOTP/1jkz/8ItKrQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOyJSW/zjUv/841L+vONS/rzjUv6841L+fONS/v0jUr/9I1K//SNSv/0jUr/9I1M+/ON
        TPnzjUv6841L+vONS/rzjUv59I5N/PWRUv/1kVL/9ZFS//WRUv/0jk36841L+vSNTP/uikqoAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA34FFEuSERyvkhEcq5IRHKuSERyrlhkkm4X06P+V1IfLndiD/5nUg/+Z1
        IP/meCmq5IhOIuSERyrkhEcq5IRHKuF2HiTwqoJX+cCe//nBn//5wZ//+cGf//S2koreaAAh5YRHK9+B
        RRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA43AO0uRw
        D//kcA//5HAP/+NwDcQAAAAAAAAAAAAAAAAAAAAAAAAAAPTPtBH5x6jq+sio//rIqP/6yKj/+ceonwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADicBKj5HES/+RxEv/kcRL/43ES691tERYAAAAAAAAAAAAAAAAAAAAAAAAAAPnGpsX6x6f/+sen//rH
        p//5xqbR4LKVAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOJwEm/kcRL/5HES/+RxEv/kcRL/4W8SPAAAAAAAAAAAAAAAAAAAAAAAAAAA+MWllPrH
        p//6x6f/+sen//nHp/L1w6QeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4G8SPeRxEv/kcRL/5HES/+RxEv/icBJsAAAAAAAAAAAAAAAAAAAAAAAA
        AAD3xaVg+sen//rHp//6x6f/+sen//bEpUYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADdbhEX43ES7ORxEv/kcRL/5HES/+JwEqAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPXDpDH6x6f9+sen//rHp//6x6f/+MWleAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADjcRLM5HES/+RxEv/kcRL/43ES1tNo
        EAQAAAAAAAAAAAAAAAAAAAAA776gD/nGpuj6x6f/+sen//rHp//5xqazAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOBvEnjhbxLN4W8SxeFv
        EsjgbxK32mwREgAAAAAAAAAAAAAAAAAAAAAAAAAA9sSklfbEpcv2xKXF98SlyvXDpKPktpgDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+D8H//gfA//4HwP/+B8D//gfA//8DwP//A+B//wPgf/gAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAf+B8D//wPAf/8D4H//A+B/4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH/8HwP//A
        +B//wPgf/8D4H//A+B//4Hgf/+B8D/////8=
</value>
  </data>
</root>